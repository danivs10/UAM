"""
Django settings for bookshop project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG =
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'
ALLOWED_HOSTS = ['bookdede.herokuapp.com', '127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authentication',
    'catalog.apps.CatalogConfig',
    'orders.apps.OrdersConfig',
    'debug_toolbar'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'bookshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'orders.context_preprocesors.cart', # ADD THIS LINE
            ],
        },

    },
]

WSGI_APPLICATION = 'bookshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {'default': dj_database_url.config(
default="postgres://spiphuarzzkdjf:80da1fa519fc72f930e4d174feb2269cafc765f61124c630e27f2d61756e46f2@ec2-44-198-236-169.compute-1.amazonaws.com:5432/d6699062p44s6q")}
"""
DATABASES = {
    'default': dj_database_url.config(
    default='postgres://alumnodb:alumnodb@localhost:5432/psi',
    conn_max_age=500)

}
"""
"""
DATABASES = {'default': dj_database_url.config(
    default="postgres://spiphuarzzkdjf:80da1fa5\
             19fc72f930e4d174feb2269cafc765f61124\
             c630e27f2d61756e46f2@ec2-44-198-236-\
             169.compute-1.amazonaws.com:5432/d669\
             9062p44s6q")}

"""

"""
DATABASES = {}
if os.getenv('SQLITE', False):
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
else:
    DATABASES['default'] = dj_database_url.config(
        default='postgres://alumnodb:alumnodb@localhost:5432/psi',
        conn_max_age=500)
"""

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_PATH = Path.joinpath(BASE_DIR, 'catalog/static')
# STATIC_PATH = Path('static')
STATIC_URL = 'static/'
# STATIC_URL = 'static/'
# STATIC_ROOT = BASE_DIR / STATIC_PATH
# STATIC_ROOT =  Path.joinpath(BASE_DIR,'static')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    BASE_DIR / "static",
    STATIC_PATH,
    
]


# Default primary key field type

# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# config/settings.py
EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = '/tmp/app-messages'


INTERNAL_IPS = [
    '127.0.0.1'
]

# Whitenoise
# Comentar esto para ejecutar en local
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
if 'DYNO' in os.environ: STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' 



# Cart
CART_SESSION_ID = 'cart'
